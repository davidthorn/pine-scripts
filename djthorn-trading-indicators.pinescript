//@version=5
//@description An indicator that displays all other indicators that are helpful to see in which direction the market may turn.
indicator("DJThorn Trading Indicators", overlay=true)

var int highestIndex = na

// Function to draw a rectangle
drawRectangle(startBar, endBar, upper, lower) =>
    box.new(left=startBar, right=endBar, top=upper, bottom=lower, border_width =0, bgcolor=color.new(#319540, 99))

marginMultiplier = input.float(5, "Marker Multiplier", group = "RSI Settings", tooltip = "The multiplier used to push the RSI overbought/sold markers away from the candle.", minval=0.01, step=0.1, display = display.none)

// Determine the rectangle's boundaries
upper = close > open ? open : close
lower = low

// Calculate future bar index for the rectangle's end
endBar = bar_index + 500    

// Draw the rectangle
drawRectangle(bar_index, endBar, upper, lower)
    
// Plot the EMA on the chart

level1 = input.int(5, "Level 1", tooltip = "The value used for the 5-Period EMA", group = "EMA", display = display.none)
level2 = input.int(8, "Level 2", tooltip = "The value used for the 8-Period EMA", group = "EMA", display = display.none)
level3 = input.int(15, "Level 3", tooltip = "The value used for the 15-Period EMA", group = "EMA", display = display.none)
level4 = input.int(50, "Level 4", tooltip = "The value used for the 50-Period EMA", group = "EMA", display = display.none)
level5 = input.int(200, "Level 5", tooltip = "The value used for the 200-Period EMA", group = "EMA", display = display.none)
level6 = input.int(300, "Level 6", tooltip = "The value used for the 300-Period EMA", group = "EMA", display = display.none)

plot(ta.ema(close, level1), color=color.rgb(22, 184, 199, 15), title="5-period EMA", display = display.pane) 
plot(ta.ema(close, level2), color=color.rgb(255, 197, 24, 15), title="8-period EMA", display = display.pane)
plot(ta.ema(close, level3), color=color.rgb(255, 24, 24), title="15-period EMA", display = display.pane)
plot(ta.ema(close, level4), color=color.rgb(82, 140, 255), title="50-period EMA", display = display.pane)
plot(ta.ema(close, level5), color=color.rgb(214, 174, 13), title="200-period EMA",linewidth = 3, display = display.pane)
plot(ta.ema(close, level6), color=color.rgb(247, 167, 226, 59), title="300-period EMA", linewidth = 4, display = display.pane)

// Function to fetch daily high and low
[dailyHigh, dailyLow] = request.security(syminfo.tickerid, "D", [high, low])

// Plotting daily high and low
// plot(dailyHigh, "Daily High", color=color.green)
// plot(dailyLow, "Daily Low", color=color.blue)

// Calculate the average volume of the previous 50 candles
avgVolume50 = ta.ema(volume, 50)

// Apply bar coloring based on the volume condition

// Determine the candle direction
candleUp = close > open
candleDown = close < open
candleNeutral = close == open

// Define colors based on conditions
barColor = candleUp ? volume >= 2.5 * avgVolume50 ? color.green : volume >= 1.5 * avgVolume50 ? color.blue : volume >= 0.5 * avgVolume50 ? color.gray : color.new(color.green, 90) :
          candleDown ? volume >= 2.5 * avgVolume50 ? color.red : volume >= 1.5 * avgVolume50 ? color.purple :volume >= 0.5 * avgVolume50 ? color.maroon : color.new(color.red, 90) :
          candleNeutral ? color.new(color.gray, 90) : na

// Apply background color
barcolor(barColor)


// Define the period for our calculations
period = 50

// Calculate the slope as the difference in price over the period
slope = (close - ta.sma(close, period)) / period

// Calculate the acceleration as the change in slope over the period
acceleration = slope - ta.sma(slope, period)
// hline(0, "Zero", color=color.rgb(134, 120, 127), linestyle=hline.style_dotted) // Reference line at 0
// plot(slope, "Slope", color=color.blue, trackprice = true)
// plot(acceleration, "Acceleration", color=color.red) 

// RSI settings
rsiPeriod = input.int(14, "RSI Period", group = "RSI Settings", tooltip = "The period used to place the RSI overbought/sold markers", display = display.none)
// Input parameters
rsiLength = input.int(14, "RSI Length", group = "RSI Settings", display = display.none)
rsiSource = close
overboughtLevel = input.int(75, "Overbought Level", group = "RSI Settings", tooltip = "The level that should be used for the overbought signal marker to be displayed", display = display.none)
oversoldLevel = input.int(30, "Oversold Level", group = "RSI Settings", tooltip = "The level that should be used for the oversold signal marker to be displayed", display = display.none)


// Calculate RSI
rsi = ta.rsi(close, rsiLength)

// Determine overbought and oversold conditions
isOverbought = rsi > overboughtLevel
isOversold = rsi < oversoldLevel

// Plot arrows for overbought and oversold conditions
if (isOverbought and volume >= 2.5 * avgVolume50)
    // Draw a downward facing arrow above the candle for overbought conditions
    label.new(x=bar_index, y=high + (high - low) * marginMultiplier, style=label.style_label_down, color=color.rgb(255, 82, 82, 88), size=size.small, text="↓")
if (isOversold)
    // Draw an upward facing arrow below the candle for oversold conditions 
    label.new(x=bar_index, y=low - (high - low) * marginMultiplier, style=label.style_label_up, color=color.rgb(76, 175, 79, 86), size=size.small, text="↑")  
  

// Inputs for Bollinger Bands
bbLength = input.int(20, "Length", group = "Bollinger Bands", minval=1, display = display.none)
bbSrc = input.source(close, "Source", group = "Bollinger Bands", display = display.none)
bbMult = input.float(2.0, "StdDev Multiplier", minval=0.001, step=0.1, group = "Bollinger Bands", display = display.none)

// Calculate Bollinger Bands
bbBasis = ta.sma(bbSrc, bbLength)
bbDev = bbMult * ta.stdev(bbSrc, bbLength)
bbUpperBand = bbBasis + bbDev
bbLowerBand = bbBasis - bbDev

// Plotting
p1 = plot(bbBasis, "Basis", color=color.rgb(33, 149, 243, 93), display = display.pane)
p2 = plot(bbUpperBand, "Upper Band", color=color.rgb(255, 82, 82, 94), display = display.pane)
p3 = plot(bbLowerBand, "Lower Band", color=color.rgb(76, 175, 79, 95), display = display.pane)
fill(p2, p3, color=color.new(#fdb6e4, 96), title="BB Background")
